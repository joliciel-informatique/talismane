//Copyright (C) 2012 Assaf Urieli
package com.joliciel.talismane;

import java.util.List;
import java.util.Scanner;
import java.util.zip.ZipInputStream;

import com.joliciel.talismane.lexicon.PosTaggerLexicon;
import com.joliciel.talismane.parser.TransitionSystem;
import com.joliciel.talismane.posTagger.PosTagSet;
import com.joliciel.talismane.posTagger.filters.PosTagSequenceFilter;
import com.joliciel.talismane.tokeniser.filters.TokenSequenceFilter;

/**
 * An implementation of Talismane for a specific language.
 * @author Assaf Urieli
 *
 */
public interface LanguageSpecificImplementation {
	/**
	 * The default transition system for this language.
	 * @return
	 */
	public TransitionSystem getDefaultTransitionSystem();

	/**
	 * Return a scanner containing the default text maker filter descriptors.
	 * @return
	 */
	public Scanner getDefaultTextMarkerFiltersScanner();

	/**
	 * Return a scanner containing the default token filter descriptors.
	 * @return
	 */
	public Scanner getDefaultTokenFiltersScanner();

	/**
	 * A list of filters to be applied to the atomic token sequences
	 * prior to tokenisation.
	 * @return
	 */
	public List<TokenSequenceFilter> getTokenSequenceFilters();

	/**
	 * A list of filters to be applied to token sequences generated by the tokeniser
	 * prior to pos-tagging.
	 * @return
	 */
	public List<TokenSequenceFilter> getDefaultPosTaggerPreProcessingFilters();

	/**
	 * A list of filters to be applied to pos-tag sequences generated by the pos-tagger
	 * after pos-tagging.
	 * @return
	 */
	public List<PosTagSequenceFilter> getPosTaggerPostProcessingFilters();
	
	/**
	 * Return the postag set for this language.
	 * @return
	 */
	public PosTagSet getDefaultPosTagSet();

	/**
	 * Return a scanner containing the default pos-tag set descriptors.
	 * @return
	 */
	public Scanner getDefaultPosTagSetScanner();
	
	/**
	 * Return a scanner containing the default pos tagger rule descriptors.
	 * @return
	 */
	public Scanner getDefaultPosTaggerRulesScanner();
	
	/**
	 * Return a scanner containing the default parser rule descriptors.
	 * @return
	 */
	public Scanner getDefaultParserRulesScanner();

	/**
	 * Return a ZipInputStream containing the default sentence model for this language.
	 * @return
	 */
	public ZipInputStream getDefaultSentenceModelStream();

	/**
	 * Return a ZipInputStream containing the default tokeniser model for this language.
	 * @return
	 */
	public ZipInputStream getDefaultTokeniserModelStream();

	/**
	 * Return a ZipInputStream containing the default pos-tagger model for this language.
	 * @return
	 */
	public ZipInputStream getDefaultPosTaggerModelStream();

	/**
	 * Return a ZipInputStream containing the default parser model for this language.
	 * @return
	 */
	public ZipInputStream getDefaultParserModelStream();
	
	public PosTaggerLexicon getLexicon();
}