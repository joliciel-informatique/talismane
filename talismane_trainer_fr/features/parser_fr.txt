# Functions for use below
IfThenElseNull(X,Y)	NullIf(Not(X),Y)
IsAConjugatedVerb()	PosTag()=="V" | PosTag()=="VS" | PosTag()=="VIMP" | PosTag()=="VPP"
IsConjugatedVerb(X)	PosTag(X)=="V" | PosTag(X)=="VS" | PosTag(X)=="VIMP" | PosTag(X)=="VPP"
IsVerb(X)	PosTag(X)=="V" | PosTag(X)=="VS" | PosTag(X)=="VIMP" | PosTag(X)=="VPP" | PosTag(X)=="VINF" | PosTag(X)=="VPR"
LemmaOrWord(X)	IfThenElse(IsNull(Lemma(X)), LexicalForm(X), Lemma(X))
Lexicalised(X)	IfThenElse(ClosedClass(X), LemmaOrWord(X), PosTag(X))
LexicalisedVerb(X)	IfThenElse(ClosedClass(X) | IsVerb(X), LemmaOrWord(X), PosTag(X))
HasSubject(X)	DependentCountIf(X,DependencyLabel()=="suj")>0
HasObject(X)	DependentCountIf(X,DependencyLabel()=="obj")>0
HasAObject(X)	DependentCountIf(X,DependencyLabel()=="a_obj")>0
HasDeObject(X)	DependentCountIf(X,DependencyLabel()=="de_obj")>0
HasPObject(X)	DependentCountIf(X,DependencyLabel()=="p_obj")>0
StackIsVerb()	OnlyTrue(IsConjugatedVerb(Stack[0]))
BufferIsVerb()	OnlyTrue(IsConjugatedVerb(Buffer[0]))
StackIsNoun()	OnlyTrue(PosTag(Stack[0])=="NC")

# Main features
PosTag(Stack[0])
PosTag(Buffer[0])
PosTagBuffer1	PairGroup	PosTag(Buffer[1])
PosTag(Buffer[2])
PosTagBuffer12()	PairGroup	Concat(PosTag(Buffer[1]), PosTag(Buffer[2]))
PosTag(Buffer[3])
PosTagBuffer123()	PairGroup	Concat(PosTag(Buffer[1]), PosTag(Buffer[2]), PosTag(Buffer[3]))
PosTagStack1	PairGroup	PosTag(Stack[1])
PosTagBeforeStack	PairGroup	PosTag(Offset(Stack[0],-1))
PosTagAfterStack	PairGroup	PosTag(Offset(Stack[0],1))
PosTagBeforeBuffer	PairGroup	PosTag(Offset(Buffer[0],-1))
PosTagAfterBuffer	PairGroup	PosTag(Offset(Buffer[0],1))
DepLabelStack	PairGroup	DependencyLabel(Stack[0])
DepLabelLDepStack	PairGroup	DependencyLabel(LDep(Stack[0]))
DepLabelRDepStack	PairGroup	DependencyLabel(RDep(Stack[0]))
DepLabelLDepBuffer	PairGroup	DependencyLabel(LDep(Buffer[0]))
LexicalForm(Stack[0])
LexicalForm(Buffer[0])
LexicalForm(Buffer[1])
LexicalFormStackHead	PairGroup	LexicalForm(Head(Stack[0]))
Lemma(Stack[0])
Lemma(Buffer[0])
Lemma(Buffer[1])
LemmaStackHead	PairGroup	Lemma(Head(Stack[0]))
ConcatWithNulls(Lemma(Stack[0]),PosTag(Buffer[0]))
ConcatWithNulls(PosTag(Stack[0]),Lemma(Buffer[0]))
ConcatWithNulls(Lemma(Stack[0]),Lemma(Buffer[0]))
GenderMatch()	PairGroup	ConcatWithNulls(Gender(Stack[0]),Gender(Buffer[0]))
NumberMatch()	PairGroup	ConcatWithNulls(Number(Stack[0]),Number(Buffer[0]))
Tense(Stack[0])
Tense(Buffer[0])
Tense(Buffer[1])
Tense(Head(Stack[0]))
TenseMatch()	PairGroup	NullIf(IsNull(Tense(Stack[0])) & IsNull(Tense(Buffer[0])), ConcatWithNulls(Tense(Stack[0]),Tense(Buffer[0])))
PersonMatch()	PairGroup	NullIf(IsNull(Person(Stack[0])) & IsNull(Person(Buffer[0])), ConcatWithNulls(Person(Stack[0]),Person(Buffer[0])))
MorphologyMatch()	PairGroup	ConcatWithNulls(Morphology(Stack[0]),Morphology(Buffer[0]))
StackHasSubject	StackIsVerb() & HasSubject(Stack[0])
StackHasObject	StackIsVerb() & HasObject(Stack[0])
StackHasAObject	StackIsVerb() & HasAObject(Stack[0]) & OnlyTrue(Lemma(Buffer[0])=="à")
StackHasDeObject	StackIsVerb() & HasDeObject(Stack[0]) & OnlyTrue(Lemma(Buffer[0])=="de")
StackHasPObject	StackIsVerb() & HasPObject(Stack[0]) & OnlyTrue(PosTag(Buffer[0])=="P" & Lemma(Buffer[0])!="à" & Lemma(Buffer[0])!="de")
StackPrepHasObject	OnlyTrue(PosTag(Stack[0])=="P") & (DependentCountIf(Stack[0],DependencyLabel()=="obj")>0)
BufferHasSubject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="suj")>0)
BufferHasObject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="obj")>0)
BufferHasAObject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="a_obj")>0) & OnlyTrue(Lemma(Stack[0])=="à")
BufferHasDeObject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="de_obj")>0) & OnlyTrue(Lemma(Stack[0])=="de")
BufferHasPObject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="p_obj")>0)& OnlyTrue(PosTag(Stack[0])=="P" & Lemma(Stack[0])!="à" & Lemma(Stack[0])!="de")
BufferPrepHasObject	OnlyTrue(PosTag(Buffer[0])=="P") & (DependentCountIf(Buffer[0],DependencyLabel()=="obj")>0)
NormalisedDistance	Normalise(Distance(Stack[0],Buffer[0]),0.0,10.0)
InverseDistance	(1-NormalisedDistance)+0.1
DistanceString()	PairGroup	ToStringAllowNulls(Distance(Stack[0],Buffer[0]))
StackLeftBufferRight	IfThenElse(Index(Stack[0])<Index(Buffer[0]),true,false)
NoComma	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()==",")==0
NoCommaString()	PairGroup	ToString(NoComma)
SingleComma	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()==",")==1
SingleCommaString()	PairGroup	ToString(SingleComma)
MultipleCommas	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()==",")>1
MultipleCommasString()	PairGroup	ToString(MultipleCommas)
NoPunctuation	BetweenCountIf(Stack[0],Buffer[0],(LexicalForm()=="\"" | LexicalForm()=="(" | LexicalForm()==")" | LexicalForm()=="-" | LexicalForm()=="—"))==0
NoPunctutationString()	PairGroup	ToString(NoPunctuation)
SinglePunctuation	BetweenCountIf(Stack[0],Buffer[0],(LexicalForm()=="\"" | LexicalForm()=="(" | LexicalForm()==")" | LexicalForm()=="-" | LexicalForm()=="—"))==1
SinglePunctuationString()	PairGroup	ToString(SinglePunctuation)
MultiplePunctuation	BetweenCountIf(Stack[0],Buffer[0],(LexicalForm()=="\"" | LexicalForm()=="(" | LexicalForm()==")" | LexicalForm()=="-" | LexicalForm()=="—"))>1
MultiplePunctuationString()	PairGroup	ToString(MultiplePunctuation)
LemmaLastVerb	PairGroup	Lemma(BackwardSearch(Stack[0],IsAConjugatedVerb()))

# Verb argument completion
VerbHasDeObj	StackIsVerb() & OnlyTrue(Lemma(Buffer[0])=="de") & PredicateHasFunction(Stack[0],"objde") & OnlyTrue(Distance(Stack[0],Buffer[0])>1)
VerbHasOptionalDeObj	StackIsVerb() & OnlyTrue(Lemma(Buffer[0])=="de") & PredicateFunctionIsOptional(Stack[0],"objde") & OnlyTrue(Distance(Stack[0],Buffer[0])>1)
VerbLemmaWithDe	IfThenElseNull(IsConjugatedVerb(Stack[0]) & Lemma(Buffer[0])=="de" & Distance(Stack[0],Buffer[0])>1, Lemma(Stack[0]))
LastVerbLemmaWithDe	 IfThenElseNull(StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="de"),LemmaLastVerb())
PrevVerbHasDeObj	StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="de") & PredicateHasFunction(BackwardSearch(Stack[0],IsAConjugatedVerb()),"objde")
PrevVerbHasOptionalDeObj	StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="de") & PredicateFunctionIsOptional(BackwardSearch(Stack[0],IsAConjugatedVerb()),"objde")
VerbLemmaNounLemmaDe	IfThenElseNull(StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="de"), ConcatWithNulls(LemmaLastVerb(),Lemma(Stack[0])))
VerbHasAObj	StackIsVerb() & OnlyTrue(Lemma(Buffer[0])=="à") & PredicateHasFunction(Stack[0],"obja") & OnlyTrue(Distance(Stack[0],Buffer[0])>1)
VerbHasOptionalAObj	StackIsVerb() & OnlyTrue(Lemma(Buffer[0])=="à") & PredicateFunctionIsOptional(Stack[0],"obja") & OnlyTrue(Distance(Stack[0],Buffer[0])>1)
VerbLemmaWithA	IfThenElseNull(IsConjugatedVerb(Stack[0]) & Lemma(Buffer[0])=="à" & Distance(Stack[0],Buffer[0])>1, Lemma(Stack[0]))
LastVerbLemmaWithA	 IfThenElseNull(StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="à"),LemmaLastVerb())
PrevVerbHasAObj	StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="à") & PredicateHasFunction(BackwardSearch(Stack[0],IsAConjugatedVerb()),"obja")
PrevVerbHasOptionalAObj	StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="à") & PredicateFunctionIsOptional(BackwardSearch(Stack[0],IsAConjugatedVerb()),"obja")
VerbLemmaNounLemmaA	IfThenElseNull(StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="à"), ConcatWithNulls(LemmaLastVerb(),Lemma(Stack[0])))

# Stack & Buffer in different parenthetical constructs (not expecting a dependency from outside a parenthesis into a parenthesis)
OpenParenthesis	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()=="(")==1 & BetweenCountIf(BackwardSearch(Buffer[0],LexicalForm()=="("),Buffer[0],LexicalForm()==")")==0
CloseParenthesis	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()==")")==1 & BetweenCountIf(Stack[0],ForwardSearch(Stack[0],LexicalForm()==")"),LexicalForm()=="(")==0

# verb argument completion (shouldn't apply "Reduce" until all verb arguments are complete)
SubjectArg	IfThenElseNull(IsConjugatedVerb(Stack[0]), ConcatWithNulls(Lemma(Stack[0]), ToStringAllowNulls(HasSubject(Stack[0]))))
ObjectArg	IfThenElseNull(IsVerb(Stack[0]), ConcatWithNulls(Lemma(Stack[0]), ToStringAllowNulls(HasObject(Stack[0]))))
AObjectArg	IfThenElseNull(IsVerb(Stack[0]), ConcatWithNulls(Lemma(Stack[0]), ToStringAllowNulls(HasAObject(Stack[0]))))
DeObjectArg	IfThenElseNull(IsVerb(Stack[0]), ConcatWithNulls(Lemma(Stack[0]), ToStringAllowNulls(HasDeObject(Stack[0]))))
PObjectArg	IfThenElseNull(IsVerb(Stack[0]), ConcatWithNulls(Lemma(Stack[0]), ToStringAllowNulls(HasPObject(Stack[0]))))
AllArguments	IfThenElseNull(IsVerb(Stack[0]), ConcatWithNulls(Lemma(Stack[0]), ToStringAllowNulls(HasSubject(Stack[0])), ToStringAllowNulls(HasObject(Stack[0])), ToStringAllowNulls(HasAObject(Stack[0])), ToStringAllowNulls(HasDeObject(Stack[0])), ToStringAllowNulls(HasPObject(Stack[0])) ))
SubjectCompletion	IfThenElseNull(IsConjugatedVerb(Stack[0]), HasSubject(Stack[0]))
DirectObjectCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"obj"), HasObject(Stack[0]))
DirectObjectRequiredCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"obj"), ConcatWithNulls(ToStringAllowNulls(PredicateFunctionIsOptional(Stack[0],"obj")), ToStringAllowNulls(HasObject(Stack[0]))))
AObjectCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"obja"), HasAObject(Stack[0]))
AObjectRequiredCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"obja"), ConcatWithNulls(ToStringAllowNulls(PredicateFunctionIsOptional(Stack[0],"obja")), ToStringAllowNulls(HasAObject(Stack[0]))))
DeObjectCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"objde"), HasDeObject(Stack[0]))
DeObjectRequiredCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"objde"), ConcatWithNulls(ToStringAllowNulls(PredicateFunctionIsOptional(Stack[0],"objde")), ToStringAllowNulls(HasDeObject(Stack[0]))))

# Complete features above with info from the top-of-stack and top-of-buffer
PosTagPair	ConcatWithNulls(PosTag(Stack[0]),PosTag(Buffer[0]))
LexicalisedPair	IfThenElseNull(ClosedClass(Stack[0]) | ClosedClass(Buffer[0]), ConcatWithNulls(Lexicalised(Stack[0]),Lexicalised(Buffer[0])))
LexicalisedVerbPair	IfThenElseNull(IsVerb(Stack[0]) | IsVerb(Buffer[0]), ConcatWithNulls(LexicalisedVerb(Stack[0]),LexicalisedVerb(Buffer[0])))
PairGroup_P	Concat(PosTagPair(), PairGroup())
PairGroup_L	Concat(LexicalisedPair(), PairGroup())
PairGroup_V	Concat(LexicalisedVerbPair(), PairGroup())

