IfThenElseNull(X,Y)	NullIf(Not(X),Y)
IsAConjugatedVerb()	PosTag()=="V" | PosTag()=="VS" | PosTag()=="VIMP" | PosTag()=="VPP"
IsConjugatedVerb(X)	PosTag(X)=="V" | PosTag(X)=="VS" | PosTag(X)=="VIMP" | PosTag(X)=="VPP"
IsVerb(X)	PosTag(X)=="V" | PosTag(X)=="VS" | PosTag(X)=="VIMP" | PosTag(X)=="VPP" | PosTag(X)=="VINF" | PosTag(X)=="VPR"
LemmaOrWord(X)	IfThenElse(IsNull(Lemma(X)), LexicalForm(X), Lemma(X))
Lexicalised(X)	IfThenElse(ClosedClass(X), LemmaOrWord(X), PosTag(X))
LexicalisedVerb(X)	IfThenElse(ClosedClass(X) | IsVerb(X), LemmaOrWord(X), PosTag(X))
HasSubject(X)	DependentCountIf(X,DependencyLabel()=="suj")>0
HasObject(X)	DependentCountIf(X,DependencyLabel()=="obj")>0
HasAObject(X)	DependentCountIf(X,DependencyLabel()=="a_obj")>0
HasDeObject(X)	DependentCountIf(X,DependencyLabel()=="de_obj")>0
HasPObject(X)	DependentCountIf(X,DependencyLabel()=="p_obj")>0
StackIsVerb()	OnlyTrue(IsConjugatedVerb(Stack[0]))
BufferIsVerb()	OnlyTrue(IsConjugatedVerb(Buffer[0]))
StackIsNoun()	OnlyTrue(PosTag(Stack[0])=="NC")
PosTagPair	Concat(PosTag(Stack[0]),PosTag(Buffer[0]))
LexicalisedPair	IfThenElseNull(ClosedClass(Stack[0]) | ClosedClass(Buffer[0]), Concat(Lexicalised(Stack[0]),Lexicalised(Buffer[0])))
LexicalisedVerbPair	IfThenElseNull(IsVerb(Stack[0]) | IsVerb(Buffer[0]), Concat(LexicalisedVerb(Stack[0]),LexicalisedVerb(Buffer[0])))
PosTag(Stack[0])
PosTag(Buffer[0])
PosTagBuffer1	PosTag(Buffer[1])
PosTagBuffer1_P	ConcatNoNulls(PosTagPair(), PosTagBuffer1())
PosTagBuffer1_L	ConcatNoNulls(LexicalisedPair(), PosTagBuffer1())
PosTagBuffer1_V	ConcatNoNulls(LexicalisedVerbPair(), PosTagBuffer1())
PosTag(Buffer[2])
PosTagBuffer12_P	ConcatNoNulls(PosTagPair(), PosTag(Buffer[1]), PosTag(Buffer[2]))
PosTagBuffer12_L	ConcatNoNulls(LexicalisedPair(), PosTag(Buffer[1]), PosTag(Buffer[2]))
PosTagBuffer12_V	ConcatNoNulls(LexicalisedVerbPair(), PosTag(Buffer[1]), PosTag(Buffer[2]))
PosTag(Buffer[3])
PosTagBuffer123_P	ConcatNoNulls(PosTagPair(), PosTag(Buffer[1]), PosTag(Buffer[2]), PosTag(Buffer[3]))
PosTagBuffer123_L	ConcatNoNulls(LexicalisedPair(), PosTag(Buffer[1]), PosTag(Buffer[2]), PosTag(Buffer[3]))
PosTagBuffer123_V	ConcatNoNulls(LexicalisedVerbPair(), PosTag(Buffer[1]), PosTag(Buffer[2]), PosTag(Buffer[3]))
PosTagStack1	PosTag(Stack[1])
PosTagStack1_P	ConcatNoNulls(PosTagPair(), PosTagStack1())
PosTagStack1_L	ConcatNoNulls(LexicalisedPair(), PosTagStack1())
PosTagStack1_V	ConcatNoNulls(LexicalisedVerbPair(), PosTagStack1())
PosTagBeforeStack	PosTag(Offset(Stack[0],-1))
PosTagBeforeStack_P	ConcatNoNulls(PosTagPair(), PosTagBeforeStack())
PosTagBeforeStack_L	ConcatNoNulls(LexicalisedPair(), PosTagBeforeStack())
PosTagBeforeStack_V	ConcatNoNulls(LexicalisedVerbPair(), PosTagBeforeStack())
PosTagAfterStack	PosTag(Offset(Stack[0],1))
PosTagAfterStack_P	ConcatNoNulls(PosTagPair(), PosTagAfterStack())
PosTagAfterStack_L	ConcatNoNulls(LexicalisedPair(), PosTagAfterStack())
PosTagAfterStack_V	ConcatNoNulls(LexicalisedVerbPair(), PosTagAfterStack())
PosTagBeforeBuffer	PosTag(Offset(Buffer[0],-1))
PosTagBeforeBuffer_P	ConcatNoNulls(PosTagPair(), PosTagBeforeBuffer())
PosTagBeforeBuffer_L	ConcatNoNulls(LexicalisedPair(), PosTagBeforeBuffer())
PosTagBeforeBuffer_V	ConcatNoNulls(LexicalisedVerbPair(), PosTagBeforeBuffer())
PosTagAfterBuffer	PosTag(Offset(Buffer[0],1))
PosTagAfterBuffer_P	ConcatNoNulls(PosTagPair(), PosTagAfterBuffer())
PosTagAfterBuffer_L	ConcatNoNulls(LexicalisedPair(), PosTagAfterBuffer())
PosTagAfterBuffer_V	ConcatNoNulls(LexicalisedVerbPair(), PosTagAfterBuffer())
DepLabelStack	DependencyLabel(Stack[0])
DepLabelStack_P	ConcatNoNulls(PosTagPair(), DepLabelStack())
DepLabelStack_L	ConcatNoNulls(LexicalisedPair(), DepLabelStack())
DepLabelStack_V	ConcatNoNulls(LexicalisedVerbPair(), DepLabelStack())
DepLabelLDepStack	DependencyLabel(LDep(Stack[0]))
DepLabelLDepStack_P	ConcatNoNulls(PosTagPair(), DepLabelLDepStack())
DepLabelLDepStack_L	ConcatNoNulls(LexicalisedPair(), DepLabelLDepStack())
DepLabelLDepStack_V	ConcatNoNulls(LexicalisedVerbPair(), DepLabelLDepStack())
DepLabelRDepStack	DependencyLabel(RDep(Stack[0]))
DepLabelRDepStack_P	ConcatNoNulls(PosTagPair(), DepLabelRDepStack())
DepLabelRDepStack_L	ConcatNoNulls(LexicalisedPair(), DepLabelRDepStack())
DepLabelRDepStack_V	ConcatNoNulls(LexicalisedVerbPair(), DepLabelRDepStack())
DepLabelLDepBuffer	DependencyLabel(LDep(Buffer[0]))
DepLabelLDepBuffer_P	ConcatNoNulls(PosTagPair(), DepLabelLDepBuffer())
DepLabelLDepBuffer_L	ConcatNoNulls(LexicalisedPair(), DepLabelLDepBuffer())
DepLabelLDepBuffer_V	ConcatNoNulls(LexicalisedVerbPair(), DepLabelLDepBuffer())
LexicalForm(Stack[0])
LexicalForm(Buffer[0])
LexicalForm(Buffer[1])
LexicalFormStackHead	LexicalForm(Head(Stack[0]))
LexicalFormStackHead_P	ConcatNoNulls(PosTagPair(), LexicalFormStackHead())
LexicalFormStackHead_L	ConcatNoNulls(LexicalisedPair(), LexicalFormStackHead())
LexicalFormStackHead_V	ConcatNoNulls(LexicalisedVerbPair(), LexicalFormStackHead())
Lemma(Stack[0])
Lemma(Buffer[0])
Lemma(Buffer[1])
LemmaStackHead	Lemma(Head(Stack[0]))
LemmaStackHead_P	ConcatNoNulls(PosTagPair(), LemmaStackHead())
LemmaStackHead_L	ConcatNoNulls(LexicalisedPair(), LemmaStackHead())
LemmaStackHead_V	ConcatNoNulls(LexicalisedVerbPair(), LemmaStackHead())
Concat(Lemma(Stack[0]),PosTag(Buffer[0]))
Concat(PosTag(Stack[0]),Lemma(Buffer[0]))
Concat(Lemma(Stack[0]),Lemma(Buffer[0]))
GenderMatch()	Concat(Gender(Stack[0]),Gender(Buffer[0]))
GenderMatch_P	ConcatNoNulls(PosTagPair(), GenderMatch())
GenderMatch_L	ConcatNoNulls(LexicalisedPair(), GenderMatch())
GenderMatch_V	ConcatNoNulls(LexicalisedVerbPair(), GenderMatch())
NumberMatch()	Concat(Number(Stack[0]),Number(Buffer[0]))
NumberMatch_P	ConcatNoNulls(PosTagPair(), NumberMatch())
NumberMatch_L	ConcatNoNulls(LexicalisedPair(), NumberMatch())
NumberMatch_V	ConcatNoNulls(LexicalisedVerbPair(), NumberMatch())
Tense(Stack[0])
Tense(Buffer[0])
Tense(Buffer[1])
Tense(Head(Stack[0]))
TenseMatch()	NullIf(IsNull(Tense(Stack[0])) & IsNull(Tense(Buffer[0])), Concat(Tense(Stack[0]),Tense(Buffer[0])))
TenseMatch_P	ConcatNoNulls(PosTagPair(), TenseMatch())
TenseMatch_L	ConcatNoNulls(LexicalisedPair(), TenseMatch())
TenseMatch_V	ConcatNoNulls(LexicalisedVerbPair(), TenseMatch())
PersonMatch()	NullIf(IsNull(Person(Stack[0])) & IsNull(Person(Buffer[0])), Concat(Person(Stack[0]),Person(Buffer[0])))
PersonMatch_P	ConcatNoNulls(PosTagPair(), PersonMatch())
PersonMatch_L	ConcatNoNulls(LexicalisedPair(), PersonMatch())
PersonMatch_V	ConcatNoNulls(LexicalisedVerbPair(), PersonMatch())
MorphologyMatch()	Concat(Morphology(Stack[0]),Morphology(Buffer[0]))
MorphologyMatch_P	ConcatNoNulls(PosTagPair(), MorphologyMatch())
MorphologyMatch_L	ConcatNoNulls(LexicalisedPair(), MorphologyMatch())
MorphologyMatch_V	ConcatNoNulls(LexicalisedVerbPair(), MorphologyMatch())
StackHasSubject	StackIsVerb() & HasSubject(Stack[0])
StackHasObject	StackIsVerb() & HasObject(Stack[0])
StackHasAObject	StackIsVerb() & HasAObject(Stack[0]) & OnlyTrue(Lemma(Buffer[0])=="à")
StackHasDeObject	StackIsVerb() & HasDeObject(Stack[0]) & OnlyTrue(Lemma(Buffer[0])=="de")
StackHasPObject	StackIsVerb() & HasPObject(Stack[0]) & OnlyTrue(PosTag(Buffer[0])=="P" & Lemma(Buffer[0])!="à" & Lemma(Buffer[0])!="de")
StackPrepHasObject	OnlyTrue(PosTag(Stack[0])=="P") & (DependentCountIf(Stack[0],DependencyLabel()=="obj")>0)
BufferHasSubject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="suj")>0)
BufferHasObject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="obj")>0)
BufferHasAObject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="a_obj")>0) & OnlyTrue(Lemma(Stack[0])=="à")
BufferHasDeObject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="de_obj")>0) & OnlyTrue(Lemma(Stack[0])=="de")
BufferHasPObject	BufferIsVerb() & (DependentCountIf(Buffer[0],DependencyLabel()=="p_obj")>0)& OnlyTrue(PosTag(Stack[0])=="P" & Lemma(Stack[0])!="à" & Lemma(Stack[0])!="de")
BufferPrepHasObject	OnlyTrue(PosTag(Buffer[0])=="P") & (DependentCountIf(Buffer[0],DependencyLabel()=="obj")>0)
NormalisedDistance	Normalise(Distance(Stack[0],Buffer[0]),0.0,10.0)
InverseDistance	(1-NormalisedDistance)+0.1
Distance_P	ConcatNoNulls(PosTagPair(), ToString(Distance(Stack[0],Buffer[0])))
Distance_L	ConcatNoNulls(LexicalisedPair(), ToString(Distance(Stack[0],Buffer[0])))
Distance_V	ConcatNoNulls(LexicalisedVerbPair(), ToString(Distance(Stack[0],Buffer[0])))
StackLeftBufferRight	IfThenElse(Index(Stack[0])<Index(Buffer[0]),true,false)
NoComma	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()==",")==0
NoComma_P	ConcatNoNulls(PosTagPair(), ToString(NoComma()))
NoComma_L	ConcatNoNulls(LexicalisedPair(), ToString(NoComma()))
NoComma_V	ConcatNoNulls(LexicalisedVerbPair(), ToString(NoComma()))
SingleComma	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()==",")==1
SingleComma_P	ConcatNoNulls(PosTagPair(), ToString(SingleComma()))
SingleComma_L	ConcatNoNulls(LexicalisedPair(), ToString(SingleComma()))
SingleComma_V	ConcatNoNulls(LexicalisedVerbPair(), ToString(SingleComma()))
MultipleCommas	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()==",")>1
MultipleCommas_P	ConcatNoNulls(PosTagPair(), ToString(MultipleCommas()))
MultipleCommas_L	ConcatNoNulls(LexicalisedPair(), ToString(MultipleCommas()))
MultipleCommas_V	ConcatNoNulls(LexicalisedVerbPair(), ToString(MultipleCommas()))
NoPunctuation	BetweenCountIf(Stack[0],Buffer[0],(LexicalForm()=="\"" | LexicalForm()=="(" | LexicalForm()==")" | LexicalForm()=="-" | LexicalForm()=="—"))==0
NoPunctuation_P	ConcatNoNulls(PosTagPair(), ToString(NoPunctuation()))
NoPunctuation_L	ConcatNoNulls(LexicalisedPair(), ToString(NoPunctuation()))
NoPunctuation_V	ConcatNoNulls(LexicalisedVerbPair(), ToString(NoPunctuation()))
SinglePunctuation	BetweenCountIf(Stack[0],Buffer[0],(LexicalForm()=="\"" | LexicalForm()=="(" | LexicalForm()==")" | LexicalForm()=="-" | LexicalForm()=="—"))==1
SinglePunctuation_P	ConcatNoNulls(PosTagPair(), ToString(SinglePunctuation()))
SinglePunctuation_L	ConcatNoNulls(LexicalisedPair(), ToString(SinglePunctuation()))
SinglePunctuation_V	ConcatNoNulls(LexicalisedVerbPair(), ToString(SinglePunctuation()))
MultiplePunctuation	BetweenCountIf(Stack[0],Buffer[0],(LexicalForm()=="\"" | LexicalForm()=="(" | LexicalForm()==")" | LexicalForm()=="-" | LexicalForm()=="—"))>1
MultiplePunctuation_P	ConcatNoNulls(PosTagPair(), ToString(MultiplePunctuation()))
MultiplePunctuation_L	ConcatNoNulls(LexicalisedPair(), ToString(MultiplePunctuation()))
MultiplePunctuation_V	ConcatNoNulls(LexicalisedVerbPair(), ToString(MultiplePunctuation()))
LemmaLastVerb	Lemma(BackwardSearch(Stack[0],IsAConjugatedVerb()))
LemmaLastVerb_P	ConcatNoNulls(PosTagPair(), ToString(LemmaLastVerb()))
LemmaLastVerb_L	ConcatNoNulls(LexicalisedPair(), ToString(LemmaLastVerb()))
LemmaLastVerb_V	ConcatNoNulls(LexicalisedVerbPair(), ToString(LemmaLastVerb()))
VerbHasDeObj	StackIsVerb() & OnlyTrue(Lemma(Buffer[0])=="de") & PredicateHasFunction(Stack[0],"objde") & OnlyTrue(Distance(Stack[0],Buffer[0])>1)
VerbHasOptionalDeObj	StackIsVerb() & OnlyTrue(Lemma(Buffer[0])=="de") & PredicateFunctionIsOptional(Stack[0],"objde") & OnlyTrue(Distance(Stack[0],Buffer[0])>1)
VerbLemmaWithDe	IfThenElseNull(IsConjugatedVerb(Stack[0]) & Lemma(Buffer[0])=="de" & Distance(Stack[0],Buffer[0])>1, Lemma(Stack[0]))
LastVerbLemmaWithDe	 IfThenElseNull(StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="de"),LemmaLastVerb())
PrevVerbHasDeObj	StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="de") & PredicateHasFunction(BackwardSearch(Stack[0],IsAConjugatedVerb()),"objde")
PrevVerbHasOptionalDeObj	StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="de") & PredicateFunctionIsOptional(BackwardSearch(Stack[0],IsAConjugatedVerb()),"objde")
VerbLemmaNounLemmaDe	IfThenElseNull(StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="de"), Concat(LemmaLastVerb(),Lemma(Stack[0])))
VerbHasAObj	StackIsVerb() & OnlyTrue(Lemma(Buffer[0])=="à") & PredicateHasFunction(Stack[0],"obja") & OnlyTrue(Distance(Stack[0],Buffer[0])>1)
VerbHasOptionalAObj	StackIsVerb() & OnlyTrue(Lemma(Buffer[0])=="à") & PredicateFunctionIsOptional(Stack[0],"obja") & OnlyTrue(Distance(Stack[0],Buffer[0])>1)
VerbLemmaWithA	IfThenElseNull(IsConjugatedVerb(Stack[0]) & Lemma(Buffer[0])=="à" & Distance(Stack[0],Buffer[0])>1, Lemma(Stack[0]))
LastVerbLemmaWithA	 IfThenElseNull(StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="à"),LemmaLastVerb())
PrevVerbHasAObj	StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="à") & PredicateHasFunction(BackwardSearch(Stack[0],IsAConjugatedVerb()),"obja")
PrevVerbHasOptionalAObj	StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="à") & PredicateFunctionIsOptional(BackwardSearch(Stack[0],IsAConjugatedVerb()),"obja")
VerbLemmaNounLemmaA	IfThenElseNull(StackIsNoun() & OnlyTrue(Lemma(Buffer[0])=="à"), Concat(LemmaLastVerb(),Lemma(Stack[0])))
# in different parenthetical constructs (not expecting a dependency from outide a parenthesis into a parenthesis)
OpenParenthesis	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()=="(")==1 & BetweenCountIf(BackwardSearch(Buffer[0],LexicalForm()=="("),Buffer[0],LexicalForm()==")")==0
CloseParenthesis	BetweenCountIf(Stack[0],Buffer[0],LexicalForm()==")")==1 & BetweenCountIf(Stack[0],ForwardSearch(Stack[0],LexicalForm()==")"),LexicalForm()=="(")==0
# verb argument completion (shouldn't apply "Reduce" until all verb arguments are complete)
SubjectArg	IfThenElseNull(IsConjugatedVerb(Stack[0]), Concat(Lemma(Stack[0]), ToString(HasSubject(Stack[0]))))
ObjectArg	IfThenElseNull(IsVerb(Stack[0]), Concat(Lemma(Stack[0]), ToString(HasObject(Stack[0]))))
AObjectArg	IfThenElseNull(IsVerb(Stack[0]), Concat(Lemma(Stack[0]), ToString(HasAObject(Stack[0]))))
DeObjectArg	IfThenElseNull(IsVerb(Stack[0]), Concat(Lemma(Stack[0]), ToString(HasDeObject(Stack[0]))))
PObjectArg	IfThenElseNull(IsVerb(Stack[0]), Concat(Lemma(Stack[0]), ToString(HasPObject(Stack[0]))))
AllArguments	IfThenElseNull(IsVerb(Stack[0]), Concat(Lemma(Stack[0]), ToString(HasSubject(Stack[0])), ToString(HasObject(Stack[0])), ToString(HasAObject(Stack[0])), ToString(HasDeObject(Stack[0])), ToString(HasPObject(Stack[0])) ))
SubjectCompletion	IfThenElseNull(IsConjugatedVerb(Stack[0]), HasSubject(Stack[0]))
DirectObjectCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"obj"), HasObject(Stack[0]))
DirectObjectRequiredCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"obj"), Concat(ToString(PredicateFunctionIsOptional(Stack[0],"obj")), ToString(HasObject(Stack[0]))))
AObjectCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"obja"), HasAObject(Stack[0]))
AObjectRequiredCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"obja"), Concat(ToString(PredicateFunctionIsOptional(Stack[0],"obja")), ToString(HasAObject(Stack[0]))))
DeObjectCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"objde"), HasDeObject(Stack[0]))
DeObjectRequiredCompletion	IfThenElseNull(IsVerb(Stack[0]) & PredicateHasFunction(Stack[0],"objde"), Concat(ToString(PredicateFunctionIsOptional(Stack[0],"objde")), ToString(HasDeObject(Stack[0]))))

